---
- hosts: localhost
  gather_facts: yes

  vars_files:
    - vars.yml
  vars:
    cluster_name: "cluster-dev"
    test_case_name: "EKS_CREATE_CLUSTER"
    region: "us-west-2"

  tasks:
    - block:

        - name: Generating Random Cluster Name
          shell: python namesgenerator.py
          register: cluster_name
          when: not cluster_name

        - set_fact:
            cluster_name: "{{ cluster_name.stdout }}"
          when: cluster_name.stdout is defined

        # - name: Select a region to create the cluster
        #   set_fact: 
        #     set_region: "{{ region }}"

        - name: create a new ec2 key pair, returns generated private key
          ec2_key:
            name: "{{cluster_name}}"
            region: "us-west-2"
          register: result
          no_log: false

        - name: Create SSH Key File
          copy:
            content: "{{ result.key.private_key }}"
            dest: "$HOME/{{cluster_name}}.pem"
            mode: '0400'
          no_log: false

        - name: Create Cluster
          shell: eksctl create cluster --name={{cluster_name}} --nodes={{initial_node_count}} --ssh-access=true --ssh-public-key={{cluster_name}} --region="us-west-2" --node-volume-size={{disk_size_gb}} --node-type={{node_type}} --nodes-min={{nodes_min}} --nodes-max={{nodes_max}} --max-pods-per-node={{max_pods_per_node}}
          args:
            executable: /bin/bash

        - name: Save cluster info
          lineinfile:
            create: yes
            state: present
            path: "~/logs/clusters"
            line: "{{ cluster_name }}"

        - name: Save region info
          lineinfile:
            create: yes
            state: present
            path: "~/logs/region"
            line: "{{ region }}"

        - name: Gather fact about instances in AWS
          ec2_instance_facts:
            filters:
              "tag:eksctl.cluster.k8s.io/v1alpha1/cluster-name": "{{cluster_name}}"
          register: result
          no_log: true

        - name: Set Test Status
          set_fact:
            flag: "Test Passed"

      rescue:
        - name: Set Test Status
          set_fact:
            flag: "Test Failed"

        - fail:
            msg: "Cluster creation failed"
